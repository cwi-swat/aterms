#include "test_dict.h"

AFun afun0;
AFun afun1;
...

ATerm patternBoolAnd = NULL;

/*
 * afun0 = appl(x,x)
 * afun1 = prod(x,x,x)
 * afun2 = cf(x)
 * afun3 = sort(x)
 * afun4 = "Bool"
 * afun5 = opt(x)
 * afun6 = layout
 * afun7 = lit(x)
 * afun8 = "and"
 * afun9 = attrs(x)
 * afun10 = assoc(x)
 * afun11 = left
 *
 * patternBoolAnd = appl(prod([cf(sort("Bool")),cf(opt(layout)),lit("and"),cf(opt(layout)),cf(sort("Bool"))],cf(sort("Bool")),attrs([assoc(left)])),[<term>,<term>,lit("and"),<term>,<term>])
 *
 */

static ATermList _test_dict = NULL;

#define _test_dict_LEN 239

static char _test_dict_baf[_test_dict_LEN] = {
0x00,0x8B,0xAF,0x83,0x00,0x11,0x33,0x03,0x3C,0x5F,0x3E,0x01,0x00,0x01,0x01,0x03,
0x05,0x5B,0x5F,0x2C,0x5F,0x5D,0x02,0x00,0x1A,0x0E,0x01,0x00,0x05,0x06,0x07,0x08,
0x09,0x0A,0x0B,0x0C,0x0D,0x0E,0x0F,0x10,0x02,0x01,0x02,0x02,0x5B,0x5D,0x00,0x00,
...
};

void init_test_dict()
{
  ATermList afuns, terms;

  _test_dict = (ATermList)ATreadFromBinaryString(_test_dict_baf, _test_dict_LEN);

  ATprotect((ATerm *)&_test_dict);

  afuns = (ATermList)ATelementAt(_test_dict, 0);

  afun0 = ATgetAFun((ATermAppl)ATgetFirst(afuns));
  afuns = ATgetNext(afuns);
  afun1 = ATgetAFun((ATermAppl)ATgetFirst(afuns));
...

  terms = (ATermList)ATelementAt(_test_dict, 1);

  patternBoolAnd = ATgetFirst(terms);
  terms = ATgetNext(terms);
}
