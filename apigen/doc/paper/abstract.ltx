This paper describes how an Abstract Programming Interface (\api) and
its implementation can be generated from the syntax definition of a data
type. In particular we describe how a grammar (in \sdf) can be used to
generate a library of access functions that manipulate the parse trees of
terms over this syntax. Application of this technique in the \metaenv\
has resulted in the elimination of 47\% of the handwritten code, thus
greatly improving both maintainability of the tools and their flexibility
with respect to changes in the parse tree format. Although the focus is
on \aterms, the issues discussed and the techniques described are more
generic and are relevant in related areas such as \xml\ data-binding.
