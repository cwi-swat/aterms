equations

%% \noindent
%% List of ranges: range corresponds to interval and
%% concatenation corresponds to union.

  [in1] _c in _c        = true
  [in2] _c in _c'       = false when _c != _c'
  [in3] _c in _c1 - _c2 = _c1 <= _c /\ _c <= _c2
  [in4] _c in           = false
  [in5] _c in cr+1 cr+2 = _c in cr+1 \/ _c in cr+2

%% Character classes: membership of character class is defined
%% in terms of membership of its range list.

  [in6] _c in [cr*] = _c in cr*

%% Boolean operations: complement is defined with respect to
%% the range $\nulchar-\topchar$.

  [in6] _c in ~cc        = _c in [\BOT-\TOP] /\ ~ _c in cc
  [in7] _c in cc1 / cc2  = _c in cc1 /\ ~ _c in cc2
  [in8] _c in cc1 /\ cc2 = _c in cc1 /\ _c in cc2
  [in9] _c in cc1 \/ cc2 = _c in cc1 \/ _c in cc2

%% Inclusion: all characters in subset are elements of the superset.

  [inc1] []          sub cc = true
  [inc2] [_c]        sub cc = _c in cc
  [inc3] [_c-_c]     sub cc = _c in cc
  [inc4] [_c1-_c2]   sub cc = _c1 in cc /\ [succ(_c1)-_c2] sub cc when _c1 < _c2 = true
  [inc5] [cr+1 cr+2] sub cc = [cr+1] sub cc /\ [cr+2] sub cc

%% Equivalence: two character classes are equivalent if both are subsets
%% of each other.

  [eqv] cc1 equiv cc2 = cc1 sub cc2 /\ cc2 sub cc1

%% Later we will also formulate equivalence as
%% $\forall c: c \in cc_1 \iff c \in cc_2$, which is equivalent to
%% [eqv].
