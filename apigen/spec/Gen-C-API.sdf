module Gen-C-API

  imports C-Syntax Gen-API

  exports
    sorts C-API C-FILE-TAG C-API-FILE C-PREFIX C-FILE-NAME

    lexical syntax
      [a-zA-Z0-9\_\.]+					-> C-FILE-NAME
      C-FILE-NAME [\:]					-> C-FILE-TAG

    context-free syntax
      c-api ":" C-FILE-NAME "," C-CONSTRUCT* "," ATerm	-> C-API
      gen-c-api ( C-FILE-NAME, C-CONSTRUCT*, API )	-> C-API
      C-FILE-TAG C-FILE "$$"				-> C-API-FILE
      C-FILE-TAG ATerm "$$"				-> C-API-FILE
      C-API-FILE+					-> C-API

  hiddens
    context-free syntax
      gen-header(C-FILE-NAME, C-CONSTRUCT*, API)	-> C-FILE
      gen-typedefs(API)					-> C-CONSTRUCTS
      gen-typedef(API-Type)				-> C-CONSTRUCT
      gen-fun-decls(API)				-> C-CONSTRUCTS
      gen-constructor-decls-top(API-Type)		-> C-CONSTRUCTS
      gen-constructor-decls(API-Type)			-> C-CONSTRUCTS
      gen-constructor-decl-single(AFun, API-Field*)	-> C-FUNCTION-DECL
      gen-constructor-decl(AFun, AFun, API-Field*)	-> C-FUNCTION-DECL
      gen-valid-decl(API-Type)				-> C-CONSTRUCT
      gen-valid-impl(API-Type)				-> C-CONSTRUCT
      gen-valid-body(AFun, API-Alt*)			-> C-SERIES
      gen-check-decls(API-Type)				-> C-CONSTRUCTS
      gen-access-decls(API-Type)			-> C-CONSTRUCTS
      gen-access-impls(API-Type)			-> C-CONSTRUCTS
      gen-term-decls(API-Type)				-> C-CONSTRUCTS
      gen-term-impls(API-Type)				-> C-CONSTRUCTS

      gen-source(C-FILE-NAME, API)			-> C-FILE
      gen-struct-decls(API)				-> C-CONSTRUCTS
      gen-struct-decl(API-Type)				-> C-CONSTRUCT

      gen-dict(API)					-> ATerms
      gen-dict-alts(API-Type)				-> ATerms

      gen-fun-impls(API)				-> C-CONSTRUCTS
      gen-constructor-impls-top(API-Type)		-> C-CONSTRUCTS
      gen-constructor-impls(API-Type)			-> C-CONSTRUCTS
      gen-constructor-impl-single(AFun, AFun, API-Field*) -> C-CONSTRUCT
      gen-constructor-impl(AFun, AFun, API-Field*)	-> C-CONSTRUCT
      gen-constructor-body(AFun, AFun, API-Field*)	-> C-SERIES
      gen-check-impls(API-Type)				-> C-CONSTRUCTS
      gen-check-impl(AFun, AFun, API-Field*)		-> C-CONSTRUCT
      gen-check-body(AFun, AFun, API-Field*)		-> C-SERIES
      gen-has-impl ( AFun, API-Field )			-> C-CONSTRUCT
      gen-has-body ( AFun, AFun, API-Location* )	-> C-SERIES
      gen-getter-impl ( AFun, API-Field )		-> C-CONSTRUCT
      gen-getter-body ( AFun, AFun, API-Location* )	-> C-SERIES
      gen-setter-impl ( AFun, API-Field )		-> C-CONSTRUCT
      gen-setter-body ( AFun, AFun, AFun, API-Location* ) -> C-SERIES

      build-init-decl ( C-FILE-NAME )			-> C-FUNCTION-DECL
      build-init-impl ( C-FILE-NAME )			-> C-CONSTRUCT
      build-check-decl ( AFun, AFun )			-> C-FUNCTION-DECL
      build-get-expr ( ATerm-Path , C-EXPR )		-> C-EXPR
      build-has-decl ( AFun, AFun , AFun )		-> C-FUNCTION-DECL
      build-getter-decl ( AFun, AFun , AFun )		-> C-FUNCTION-DECL
      build-set-expr ( AFun, ATerm-Path, ATerm-Path )	-> C-EXPR
      build-setter-decl ( AFun, AFun , AFun )		-> C-FUNCTION-DECL
      build-formal-args-list ( API-Field* )		-> C-VARIABLE-DECLS
      build-actual-args-list ( API-Field* )		-> C-ACTUALS
      build-null-args-list ( API-Field* )		-> C-ACTUALS
      build-typedef ( AFun )				-> C-CONSTRUCT
      build-c-id-tail ( AFun+ )                        	-> C-ID
      build-c-id ( AFun+ )                        	-> C-ID
      build-c-int ( Nat )				-> C-NAT-CON
      build-valid-c-afun( AFun, AFun )			-> AFun
      build-afun ( AFun+ )                        	-> AFun
      build-valid-afun( AFun )				-> AFun
      build-header-tag ( C-FILE-NAME )			-> C-FILE-TAG
      build-source-tag ( C-FILE-NAME )			-> C-FILE-TAG
      build-dict-tag ( C-FILE-NAME )			-> C-FILE-TAG
      build-dict-header ( C-FILE-NAME )			-> C-INCLUDE-FILE
      build-api-header ( C-FILE-NAME )			-> C-INCLUDE-FILE
      build-macro ( C-FILE-NAME )			-> C-ID

      replace-holes ( ATerm )				-> ATerm
      replace-holes-terms ( ATerms )			-> ATerms
      replace-placeholder( ATerm )			-> ATerm

    variables
      "$ADT"			-> ATerm
      "$AFun"			-> AFun
      "$Alt"			-> API-Alt
      "$Alt+"			-> API-Alt+
      "$Alt*"			-> API-Alt*
      "$AltId"			-> AFun
      "$AltField*"		-> API-Field*
      "$API"			-> API
      "$ApiHeader"		-> C-INCLUDE-FILE
      "$Args"[0-9]*		-> { ATerm "," }+
      "$ATerm"[0-9]*		-> ATerm
      "$ATerms"[0-9]*		-> { ATerm "," }*
      "$CFieldId"		-> AFun
      "$Dict"[0-9]*		-> { ATerm "," }*
      "$DictHeader"		-> C-INCLUDE-FILE
      "$Elems"[0-9]*		-> { ATerm "," }*
      "$Field"			-> API-Field
      "$Field*"			-> API-Field*
      "$FieldId"		-> AFun
      "$FieldPrefix"		-> AFun
      "$FieldType"		-> AFun
      "$FunDecl"[0-9]*		-> C-FUNCTION-DECL
      "$FunDeclList"[0-9]*	-> C-CONSTRUCT*
      "$FunImplList"[0-9]*	-> C-CONSTRUCT*
      "$GetExpr"[0-9]*		-> C-EXPR
      "$GetImpl"		-> C-CONSTRUCT
      "$HasImpl"		-> C-CONSTRUCT
      "$Header"			-> C-FILE
      "$Id"			-> C-ID
      "$InitImpl"		-> C-CONSTRUCT
      "$Loc"			-> API-Location
      "$Loc*"[0-9]*		-> API-Location*
      "$Loc+"			-> API-Location+
      "$Macro"			-> C-ID
      "$Parent"			-> { ATerm-Path-Node "->" }*
      "$Path"			-> { ATerm-Path-Node "->" }*
      "$Pattern"		-> ATerm
      "$Prefix"			-> C-FILE-NAME
      "$Prologue"		-> C-CONSTRUCT*
      "$SetExpr"[0-9]*		-> C-EXPR
      "$SetImpl"		-> C-CONSTRUCT
      "$SortedField*"		-> API-Field*
      "$Source"			-> C-FILE
      "$Type"			-> API-Type
      "$Type*"			-> API-Type*
      "$Type+"			-> API-Type+
      "$TypeId"			-> AFun
      "$ValidId"		-> AFun

      "$Typedef"		-> C-CONSTRUCT
      "$Typedef*"[0-9]*		-> C-CONSTRUCT*
      "$FunBody"		-> C-SERIES
      "$VarDef"			-> C-CONSTRUCT
      "$VarDef*"		-> C-CONSTRUCT*
      "$FormalArg"		-> C-VARIABLE-DECL
      "$FormalArg*"		-> { C-VARIABLE-DECL "," }*
      "$ActualArg"		-> C-ID
      "$ActualArg*"		-> { C-EXPR "," }*
      "$Stat"			-> C-STAT

      "$AFun"			-> AFun
      "$AFun+"			-> AFun+
      "$Index"			-> Nat
      "$Nat"			-> Nat

      "$Char*"[0-9]* 		-> CHAR*