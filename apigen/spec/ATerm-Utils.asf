equations

  [equ-merge-adts-empty]
    merge-adts($ADT, []) = $ADT

  [equ-merge-adts-double-ok]
    merge-adts([$Entry*1, $Entry, $Entry*2], [$Entry, $Entry*3]) =
	merge-adts([$Entry*1, $Entry, $Entry*2], [$Entry*3])

  [equ-merge-adts-double-collision]
    $Entry1 = [$TypeId, $AltId, $Pattern1],
    $Entry2 = [$TypeId, $AltId, $Pattern2],
    $Pattern1 != $Pattern2,
    merge-adts([$Entry*1, $Entry1, collision($Entry1, $Entry2),
	$Entry*2], [$Entry*3]) = $ADT
    ===>
    merge-adts([$Entry*1, $Entry1, $Entry*2], [$Entry2, $Entry*3]) = $ADT

  [default-merge-adts-divide]
    merge-adts([$Entry*1], [$Entry, $Entry*2]) =
	merge-adts([$Entry*1, $Entry], [$Entry*2])

  [equ-get-type-int]  get-type($Int) = #int
  [equ-get-type-list] get-type([$ATerm*]) = #list
  [equ-get-type-int] get-type(<$ATerm>) = #placeholder
  [default-equ-get-type] get-type($ATerm) = #appl

  [default-afun-concat-single]
    afun-concat($AFun) = $AFun

  [equ-afun-concat-divide-literal-afun]
    afun-concat($AFun+) = afun($Char*2)
    ===>
    afun-concat(at-literal(""" $Char*1 """) $AFun+) = 
      at-literal(""" $Char*1 "-" $Char*2 """)

  [equ-afun-concat-divide-afun-afun]
    afun-concat($AFun+) = afun($Char*2)
    ===>
    afun-concat(afun($Char*1) $AFun+) = afun($Char*1 "-" $Char*2)

  [equ-afun-concat-divide-literal-literal]
    afun-concat($AFun+) = at-literal(""" $Char*2 """)
    ===>
    afun-concat(at-literal(""" $Char*1 """) $AFun+) =
      at-literal(""" $Char*1 "-" $Char*2 """)

  [equ-afun-concat-divide-afun-literal]
    afun-concat($AFun+) = at-literal(""" $Char*2 """)
    ===>
    afun-concat(afun($Char*1) $AFun+) =
      at-literal(""" $Char*1 "-" $Char*2 """)

  [equ-aterm-to-lit-afun]
    aterm-to-lit(afun($Char*)) = at-literal(""" $Char* """)

  [equ-aterm-to-lit-intcon]
    aterm-to-lit(natcon($Char*)) = at-literal(""" $Char* """)

  [equ-aterm-to-lit-intcon-minus]
    aterm-to-lit(- natcon($Char*)) = at-literal(""" "-" $Char* """)

  [equ-aterm-to-lit-literal]
    escape(at-literal($Char*1)) = at-literal(""" $Char*2 """)
    ===>
    aterm-to-lit(at-literal($Char*1)) = 
	at-literal(""" "\" """ $Char*2 "\" """ """)

  [equ-aterm-to-lit-appl]
    aterm-to-lit($AFun) = at-literal(""" $Char*1 """),
    aterms-to-lit($ATerm+) = at-literal(""" $Char*2 """)
    ===>
    aterm-to-lit($AFun($ATerm+)) = at-literal(""" $Char*1 "(" $Char*2 ")" """)

  [equ-aterm-to-lit-list]
    aterms-to-lit($ATerm*) = at-literal(""" $Char* """)
    ===>
    aterm-to-lit([$ATerm*]) = at-literal(""" "[" $Char* "]" """)

  [equ-aterm-to-lit-placeholder]
    aterm-to-lit($ATerm) = at-literal(""" $Char* """)
    ===>
    aterm-to-lit(<$ATerm>) = at-literal(""" "<" $Char* ">" """)

  [equ-aterm-to-lit-anno]
    aterm-to-lit($ATerm) = at-literal(""" $Char*1 """),
    aterms-to-lit($Anno+) = at-literal(""" $Char*2 """)
    ===>
    aterm-to-lit($ATerm { $Anno+ }) = 
	at-literal(""" $Char*1 "{" $Char*2 "}" """) 

  [equ-aterms-to-lit-empty]
    aterms-to-lit() = ""

  [equ-aterms-to-lit-single]
    aterms-to-lit($ATerm) = aterm-to-lit($ATerm)

  [equ-aterms-to-lit-divide]
    aterm-to-lit($ATerm) = at-literal(""" $Char*1 """),
    aterms-to-lit($ATerm+) = at-literal(""" $Char*2 """)
    ===>
    aterms-to-lit($ATerm,$ATerm+) = at-literal(""" $Char*1 "," $Char*2 """)

  [equ-concat] 
    at-literal(""" $Char*1 """) ++ at-literal(""" $Char*2 """) = 
	at-literal(""" $Char*1 $Char*2 """)

  [equ-escape-quote]
    $L = at-literal(""" "\" """ """) ++ escape(at-literal(""" $Char* """))
    ===>
    escape(at-literal(""" """ $Char* """)) = $L

  [equ-escape-backslash]
    $L = at-literal(""" "\" "\" """) ++ escape(at-literal(""" $Char* """))
    ===>
    escape(at-literal(""" "\" $Char* """)) = $L

  [equ-escape-empty]
    escape(at-literal(""" """)) = at-literal(""" """)

  [default-escape]
    $L = at-literal(""" $Char """) ++ escape(at-literal(""" $Char* """))
    ===>
    escape(at-literal(""" $Char $Char* """)) = $L


  [equ-quote-all-funs-unquoted-constant]
    quote-all-funs(afun($Char*)) = at-literal(""" $Char* """)

  [equ-quote-all-funs-unquoted-constant]
    quote-all-funs-in-list($ATerm+) = $ATerm+2
    ===>
    quote-all-funs(afun($Char*)($ATerm+)) = 
      at-literal(""" $Char* """)($ATerm+2)

  [default-quote-all-funs]
    quote-all-funs($ATerm) = $ATerm

  [equ-quote-all-funs-in-list-singleton]
    quote-all-funs-in-list($ATerm) = quote-all-funs($ATerm)

  [equ-quote-all-funs-in-list-more]
    quote-all-funs($ATerm) = $ATerm2,
    quote-all-funs-in-list($ATerm+) = $ATerm+2
    ===>
    quote-all-funs-in-list($ATerm, $ATerm+) = $ATerm2, $ATerm+2
