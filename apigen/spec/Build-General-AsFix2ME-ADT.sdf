module Build-General-AsFix2ME-ADT

imports ATerm-Utils Sdf2 Cons-Options

exports
  context-free syntax
    sort-to-lit ( Sort )				-> AT-Literal

    build-asfix-attrs ( Attributes, ConsOption )	-> ATerm
    build-asfix-attrs ( ModuleName, Attributes, ConsOption )	-> ATerm
    build-asfix-attr-list ( { Attribute "," }+, ConsOption )	-> ATerms
    build-asfix-attr ( Attribute, ConsOption )			-> ATerms

    modname-to-lit ( ModuleName )			-> AT-Literal

hiddens
  variables
    "$ADT"[0-9]*	-> ATerm
    "$AFArg"		-> ATerm
    "$AFArgs"		-> { ATerm "," }*
    "$AFAttr"		-> ATerm
    "$AFAttr+"[0-9]*	-> { ATerm "," }+
    "$AFAttr*"[0-9]*	-> { ATerm "," }*
    "$AFAttrs"		-> ATerm
    "$AFIter"		-> ATerm
    "$AFModName"	-> AT-Literal
    "$AFProd"		-> ATerm
    "$AFSep"		-> ATerm
    "$AFSort"		-> AT-Literal
    "$AltId"		-> AFun
    "$ATerm"		-> ATerm
    "$Attr"		-> Attribute
    "$Attr*"[0-9]*	-> { Attribute "," }*
    "$Attr+"		-> { Attribute "," }+
    "$Attributes"	-> Attributes
    "$Char*"[0-9]*	-> CHAR*
    "$ConsOption"	-> ConsOption
    "$ElemSortName"	-> AFun
    "$ElemType"		-> AFun
    "$Entries"[0-9]*	-> { ATerm "," }*
    "$Entry"		-> ATerm
    "$FieldName"	-> AT-Literal
    "$FieldId"		-> AFun
    "$FieldType"	-> AFun
    "$FieldWs"		-> ATerm
    "$Grammar"[0-9]*	-> Grammar
    "$ImpSection*"	-> ImpSection*
    "$Label"		-> Literal
    "$ListType"		-> AFun
    "$Literal"		-> Literal
    "$ModName"		-> ModuleName
    "$Module"		-> Module
    "$Module*"		-> Module*
    "$Production"	-> Production
    "$Production*"	-> Production*
    "$SDF"		-> SDF
    "$Section"		-> Section
    "$Section*"		-> Section*
    "$Sep"		-> Literal
    "$Sort"		-> Sort
    "$Symbol"		-> Symbol
    "$Symbol*"		-> Symbol*
    "$Symbol+"		-> Symbol+
    "$TypeId"		-> AFun
    "$UQLit"		-> UQLiteral
    "$QLit"		-> Literal
